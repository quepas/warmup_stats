#!/usr/bin/env python3
#
# Copyright (c) 2017 King's College London
# created by the Software Development Team <http://soft-dev.org/>
#
# The Universal Permissive License (UPL), Version 1.0
#
# Subject to the condition set forth below, permission is hereby granted to any
# person obtaining a copy of this software, associated documentation and/or
# data (collectively the "Software"), free of charge and under any and all
# copyright rights in the Software, and any and all patent rights owned or
# freely licensable by each licensor hereunder covering either (i) the
# unmodified Software as contributed to or provided by such licensor, or (ii)
# the Larger Works (as defined below), to deal in both
#
# (a) the Software, and
# (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
# one is included with the Software (each a "Larger Work" to which the Software
# is contributed by such licensors),
#
# without restriction, including without limitation the rights to copy, create
# derivative works of, display, perform, and distribute the Software and make,
# use, sell, offer for sale, import, export, have made, and have sold the
# Software and the Larger Work(s), and to sublicense the foregoing rights on
# either these or other terms.
#
# This license is subject to the following condition: The above copyright
# notice and either this complete permission notice or at a minimum a reference
# to the UPL must be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
Convert an external suite CSV file into a Krun-compatible compressed JSON
results file.
"""

import argparse
import os
import os.path
import sys

sys.path.insert(0, os.path.join(os.path.dirname(
    os.path.dirname(os.path.abspath(__file__)))))
from warmup.krun_results import csv_to_krun_json


def main(in_files, language, vm, uname):
    return csv_to_krun_json(in_files, language, vm, uname)


def create_cli_parser():
    """Create a parser to deal with command line switches.
    """
    script = os.path.basename(__file__)
    description = (('\n%s\n' % __doc__) +
                   'CSV files are assumed to be in the following format:\n\n'
                   'process num, bench_name, 0, 1, 2, ...\n'
                   '0, spectral norm, 0.2, 0.1, 0.4, ...\n'
                   '1, spectral norm, 0.3, 0.15, 0.2, ...\n'
                   '\n\nExample usage:\n\n\t$ pypy %s -l java-default -v '
                   'Hotspot -u "Linux snim2-r700 4.4.0-38-generic #57-Ubuntu '
                   'SMP Tue Sep 6 15:42:33 UTC 2016 x86_64 x86_64 x86_64 '
                   'GNU/Linux" results.csv\n'
                   % script)
    parser = argparse.ArgumentParser(description,
                                     formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('csv_files', nargs='+', action='append', default=[],
                        type=str, help='One or more CSV result files.')
    parser.add_argument('--language', '-l', dest='language', action='store',
                        type=str, help='Language under benchmark.')
    parser.add_argument('--vm', '-v', dest='vm', action='store', default='Hotspot',
                        type=str, help='Virtual machine under test.')
    parser.add_argument('--uname', '-u', dest='uname', action='store', default='',
                        type=str, help='uname -a string from benchmarking machine.')
    return parser


if __name__ == '__main__':
    parser = create_cli_parser()
    options = parser.parse_args()
    main(options.csv_files[0], options.language, options.vm, options.uname)
